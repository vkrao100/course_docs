\section{Preliminaries: Notation and Background}
\label{sec:prelim}
This section reviews some basic concepts from symbolic computer
algebra that we utilize in this paper. 



Let $\F_q$ denote the finite field of $q$ elements, where $q=p^k$ is
a prime power. To model functions over $k$-bit vector operands, we
use $q = 2^k$, i.e. the finite field $\Fkk$ of $2^k$
elements. The field $\Fkk$ is constructed as $\Fkk = \Ftwo[X]\pmod{
  P(X)}$, where $\Ftwo$ is the field of two elements $\{0, 1\}$, and
$P(X)$ is an irreducible polynomial of degree $k$. Moreover, we use
$\alpha$ to denote a root of the irreducible polynomial,
i.e. $P(\alpha) =0$.  

Let $R=\F_q[x_1,\dots,x_n]$ be the  polynomial ring in variables
$x_1,\dots,x_n$ with coefficients in $\F_q$. A polynomial $f \in R$ is 
written as a finite sum of terms  $f = c_1 X_1 +  c_2 X_2 + \dots +
c_t X_t$.  Here $c_1, \dots, c_t$ are coefficients and $X_1, \dots,
X_t$ are monomials, i.e. power products of the type $x_1^{e_{1}}\cdot
x_2^{e_{2}}\cdots x_n^{e_{n}}$,  $e_j \in \Z_{\geq  0}$. To
systematically manipulate the polynomials, a monomial order $>$ (also
called a term order) is imposed on the polynomial ring.
Subject to $>$, $X_1 >X_2 > \dots >  X_t$, and 
$lt(f) = c_1 X_1, ~lm(f) = X_1, ~lc(f) = c_1$, are the {\it
leading   term}, {\it   leading monomial} and {\it   leading
coefficient} of $f$, respectively. Also, for a polynomial $f$,
$tail(f) = f - lt(f)$. In this work, we are mostly concerned with {\it
  lexicographic} (lex) term orders. 

\par Logic gates of a circuit can be modeled with polynomials in
$\F_2$. As $\Fkk \supset \F_2$, these polynomials can also be
construed as polynomials in $\Fkk$.  The mapping $\B \mapsto \F_2$ is
given as: 


\begin{equation}
\label{bool2poly}
\begin{split}
z ~ =  ~ \neg a ~ \rightarrow ~ z+a+1 & \pmod 2  \\
z ~ =  ~ a \wedge b ~ \rightarrow ~ z+a \cdot b & \pmod 2\\
z ~ =  ~ a \vee b ~ \rightarrow ~ z+a+b+a \cdot b & \pmod 2 \\
z ~ =  ~ a \oplus b ~ \rightarrow ~ z+a+b & \pmod 2 
\end{split}
\end{equation}



{\bf Polynomial Reduction via division:} Let $f, g$ be
polynomials. If $lm(f)$ is divisible by $lm(g)$, then we say that $f$
{\it is reducible to} $r$ modulo $g$, denoted
$f\stackrel{g}{\textstyle\longrightarrow}r$, where
$r = f - {\frac{lt(f)}{lt(g)}} \cdot g$. Similarly, $f$ can be {\it
  reduced  w.r.t. a set of polynomials}  $F = \{f_1, \dots, f_s\}$ to
obtain a remainder $r$. This reduction is denoted as $f \stackrel{F}
{\textstyle \longrightarrow}_+ r$, and the remainder $r$ has the
property that no term in $r$ is divisible by the leading term of any
polynomial $f_j$ in $F$. Algorithm~\ref{algo:mv_reduce}
(from \cite{gb_book}) shows a step-by-step procedure to perform this
reduction.   

\ \\
\begin{algorithm}[hbt]
 \caption{Multivariate Reduction of $f$ by $F=\{f_1,\dots,f_s\}$}
 \label{algo:mv_reduce}
 \begin{algorithmic}[1]
 % \Procedure{$multi\_variate\_division$}{$f, f_1, \dots, f_s \in \F[x_1, \dots, x_n], f_i\neq 0$}
 \Procedure{$multi\_var\_division$}{$f,\{f_1,\dots,f_s\},f_j\neq0$}
 % \ENSURE $u_1,\dots, u_s, r$ s.t. $f = \sum f_i u_i+r$ where $r$ is
 % reduced w.r.t. $F = \{f_1,\dots, f_s\}$ and max($lp(u_1)lp(f_1), \dots, lp(u_s)lp(f_s), lp(r)$) = $lp(f)$
 \State $u_j \gets 0; ~r \gets 0, ~h \gets f $ 
 \While {  $h \neq 0$ }
 \If{ $\exists j$ s.t. $lm(f_j) ~|~ lm(h)$}
 \State choose $j$ least s.t. $lm(f_j) ~|~ lm(h)$
 \State $u_j = u_j + \frac{lt(h)}{lt(f_j)}$
 \State $h = h - \frac{lt(h)}{lt(f_j)} f_j$
 \Else
 \State $r = r+ lt(h)$
 \State $h = h - lt(h)$
 \EndIf
 \EndWhile
 \State \Return $(\{u_1,\dots,u_s\} , r)$
 \EndProcedure
 \end{algorithmic}
 \end{algorithm}


The algorithm initializes $h$ with the polynomial $f$ and cancels its
leading term by some  polynomial $f_j$. If the leading term $lt(h)$
cannot be canceled by any $lt(f_j)$, then it is added to the  final
remainder $r$ and the process is repeated until all the terms in $h$
are analyzed.  The algorithm also returns the set of quotients
$\{u_1,\dots,u_s\}$ of division of $f$ by  $\{f_1,\dots,f_s\}$,
respectively.  

%{\bf Polynomial Ideals:}
\begin{Definition}
Given a ring $R=\mathbb{F}_q[x_1,\dots, x_n]$ and a set of polynomials
$F=\{f_1,\dots,f_s\}$ from $R$, the ideal generated by $F$ is $J =
\langle F \rangle \subseteq R$:

{\small
\begin{equation}
J = \langle f_1, \dots, f_s \rangle = \{ h_1\cdot f_1 + \dots+h_s\cdot
f_s:  h_1,\dots,h_s\in R\}.
%\{\sum_{j=1}^{s} h_j\cdot f_j: ~h_j \in R\}.
\end{equation}
}

The polynomials $f_1,\dots,f_s$ are called the generators or the basis
of ideal $J$.
\end{Definition}

An ideal may have many different sets of generators, i.e. it is
possible to have $J = \langle f_1, \dots, f_s\rangle = \langle g_1,
\dots, g_t \rangle = \dots = \langle h_1,\dots, h_r\rangle$. A
\Grobner basis (GB) of an ideal is one such generating set
$G=\{g_1, \dots, g_t\}$ that is a canonical representation of the
ideal. 

\begin{Definition}
\label{def:gb}
$\bf{\left[Gr\ddot{o}bner\ Basis\right]}$~\cite{gb_book}: 
For a monomial ordering $>$, a set  of non-zero polynomials $G =
\{g_1,g_2,\cdots,g_t\}$ contained in an ideal $J$, is called a
\Grobner basis of $J$ iff 
$\forall f \in J$, $f\neq 0$, there exists $g_i\in G$ 
%$i \in \{1,\cdots, t\}$
such that $lm(g_i)$ divides $lm(f)$; i.e., $G = GB(J)
\Leftrightarrow\  \forall f \in J : f \neq 0 \ \exists g_i \in G :
lm(g_i)\mid lm(f)$.  
\end{Definition}

Then $J = \langle F \rangle = \langle G \rangle$ holds and $G=GB(J)$
forms a basis for $J$. The \Grobner basis for an ideal $J$ can be
computed using the  Buchberger's algorithm \cite{buchberger_thesis},
reproduced in Alg. \ref{alg:gb}. 
%(see Alg. 1.7.1 in~\cite{gb_book}) which takes
It takes as input a set of polynomials $\{f_1,\dots, f_s\}$ and
computes its GB $G = \{g_1,g_2,\cdots,g_t\}$. 
%also given in textbooks \cite{ideals:book} \cite{gb_book}, 

\begin{algorithm}
\caption {Buchberger's Algorithm}
\label{alg:gb}
\begin{algorithmic}[1]
 \Require {$F = \{f_1, \dots, f_s\}$}
 \Ensure  {$G = \{g_1,\dots ,g_t\}$} %, a Gr\"{o}bner basis \\
  \State $G:= F$;
  \Repeat
    \State $G' := G$
    \For {each pair $\{f_i, f_j\}, i \neq j$ in $G'$}
      \State $Spoly(f_i, f_j) \stackrel{G'}{\textstyle\longrightarrow}_+h$ 
      \If {$h \neq 0$} \State $G:= G \cup \{h\}$ \EndIf
    \EndFor
%\hspace{0.2in}  $G(x):=G(x) / x$
  \Until $G = G'$
\end{algorithmic}
\end{algorithm}


The algorithm
%initializes the set $G$ with the given generators of $J$
%$i.e.$ $\{f_1,\dots,f_s\}$. Then it
takes pairs of polynomials ($f_i,f_j$) from the basis and computes
their S-polynomial $Spoly(f_i,f_j)$:
% algorithm is based on the computation of $Spoly$ of pairwise combination of polynomials 
%in $G$ using the following formula,
\begin{equation}
\label{spoly}
\begin{split}
Spoly(f_i,f_j) = \frac{L}{lt(f_i)}\cdot f_i - \frac{L}{lt(f_j)}\cdot f_j
\end{split}
\end{equation}
where $L = LCM(lt(f_i),lt(f_j))$. The $Spoly(f_i,f_j)$ is then reduced
$w.r.t.$ the polynomials in $G$ to obtain remainder $h$. If $h$ is
non-zero, it is added to $G$. The process is repeated for all unique
polynomial pairs, including those generated by the newly added
elements $h$. The algorithm terminates when there are no new non-zero
$h$ generated from the set $G$. $Spoly(f_i,f_j)\xrightarrow{G}_+h$
reductions cancel the leading terms of polynomials $\{f_i,f_j\}$, and
generate $h$ with new leading terms, providing additional
information about the ideal.  


% Buchberger's algorithm has a very high complexity and it is not practical
% to compute for large polynomial ideals.  
%\debug{A GB can be {\it reduced} to eliminate
%redundant polynomials from the basis. A reduced GB is a canonical
%representation of the ideal.}

Buchberger's algorithm can be easily extended to output 
not just the \Grobner basis $G=\{g_1,\dots,g_t\}$ but also a $t\times
s$ matrix $M$ with polynomial entries such that:

\begin{center}
\begin{align}\label{eqn:matrix}
\begin{bmatrix} g_1 \\ g_2 \\ \vdots \\ g_t \end{bmatrix} =  M \cdot
\begin{bmatrix} f_1 \\ f_2 \\ \vdots \\ f_s \end{bmatrix}
\end{align}
\end{center}
%%:$M$ is a $t\times s$ polynomial matrix.\\

An important property of \Grobner bases is that as a decision
procedure, they allow for membership testing of a polynomial in an
ideal. 

\begin{Lemma}
\label{lem:imt}
({\it Ideal Membership Testing)
%(From Section 2.1 in~\cite{gb_book})
} 
Let $G = GB(J) = \{g_1,\dots,g_t\}$ and $f$ be any polynomial. Then
$f\in J \iff f\xrightarrow{G}_+0$.
%%       Given $F = \{f_1,\dots,f_s\}$, let $G = \{g_1,g_2,\cdots,g_t\}$ be the GB for
%% $J = \langle f_1,\dots,f_s\rangle$ with respect to a fixed term ordering.
%% It is possible to determine if a polynomial $f \in \F_q[x_1,\dots$ $,x_n]$ is
%% in the ideal $J$, defined as Ideal Membership Testing by checking: 
%% $f \in J \iff f \xrightarrow{G}_+ 0$
\end{Lemma}

In other words, a polynomial $f$ is a member of ideal $J$ iff division
by the \Grobner basis of $J$ gives remainder 0. Consequently, $f$ can
be written as a polynomial combination of the elements of the \Grobner basis:
\begin{align}\label{eqn:imt}
f & = u_1g_1 + u_2g_2+ \dots+ u_tg_t,
\end{align}
where $u_i 's$ correspond to the quotients of division
$f\xrightarrow{g_1,\dots,g_t}_+0$. Eqns. (\ref{eqn:imt}) and
(\ref{eqn:matrix}) can be combined to give $f$ as combination of the
original polynomials $f_1,\dots,f_s$:
\begin{align}\label{eqn:imt_orig}
f = v_1f_1 +\dots+v_sf_s.
\end{align}

We utilize this concept to identify the unknown component. 


%{\bf Ideal and Variety operations:}\\
\subsection{Operations on Ideals}
Given two ideals $J_1 = \langle f_1,\dots,f_s\rangle, J_2=\langle
e_1,\dots,e_r\rangle$, their sum is given as $J_1 + J_2 = \langle
f_1,\dots,f_s,e_1\dots,e_r\rangle$.
%% , and their product is given as $J_1\cdot J_2 =
%% \langle f_j\cdot e_k: 1\leq j\leq s, 1\leq k\leq r\rangle$. 
%% \par For an ideal $J = \langle f_1, \dots, f_s \rangle$, the {\it variety} of
%% $J$ over $\F_q$ is denoted by $\vfqj$ and defined as, 
%% \begin{align*}
%% \vfqj = \{\mathbf{a} \in \F_q^n: \forall f \in J,f(\mathbf{a})=0\}
%% \end{align*}
%% Therefore, $\vfqj$ is the set of all the points in $\F_q^n$ that are
%% solutions to $f_1 = f_2 = \dots = f_s = 0$. Varieties can 
%% be different when restricted to the given field $\Fq$
%% or considered over its algebraic closure $\Fqbar$.
%% Ideals and varieties are dual concepts: $V(J_1 + J_2) = V(J_1) \cap V(J_2)$, and
%% $V(J_1\cdot J_2) = V(J_1) \cup V(J_2)$. Moreover, if $J_1 \subseteq
%% J_2$ then $V(J_1)\supseteq V(J_2)$.
For all elements $\alpha \in \Fq, \alpha^q = \alpha$. Therefore, the
polynomial $x^q-x$ {\it vanishes} (evaluates to zero) everywhere in
$\Fq$, and is called the vanishing polynomial of the field. We denote
by $J_0 = \langle x_1^q-x_1,\dots,x_n^q-x_n\rangle$ the ideal of all
vanishing polynomials in the ring $R$.
%Then $V_{\Fq}(J_0) = V_{\Fqbar}(J_0) =
%\Fq^n$. Therefore, given any ideal $J$, $V_{\Fq}(J) = V_{\Fqbar}(J)
%\cap\Fq^n = V_{\Fqbar}(J) \cap V_{\Fqbar}(J_0) = V_{\Fqbar}(J+J_0) =
%V_{\Fq}(J+J_0)$ (\cite{gao:gf-gb-ms}).

\begin{Definition}[{\it Elimination Ideal~\cite{ideals:book}}]
Given an ideal $J = \langle f_1, \dots, f_s\rangle \subset \Fq[x_1,\dots,x_n]$, the $l$-th elimination
ideal $J_l$ is defined as $J_l = J \cap \Fq[x_{l+1},\dots,x_n]$.
\end{Definition}

The ideal $J_l$ is called an elimination ideal because the variables $x_1,\dots,x_{l-1}$
have been eliminated. Generators of the $l$-th elimination ideal can
be computed using \Grobner bases.

\begin{Theorem}[{\it Elimination Theorem~\cite{ideals:book}}]
\label{def:elim}
Given an ideal $J \subset R$ and its GB $G$ $w.r.t.$ the
lexicographical (lex) order on the variables 
where $x_1 > x_2 > \cdots > x_n$, then for every $0 \leq l \leq n$ we
denote by $G_l$ the GB of $l$-th elimination ideal of $J$ and compute
it as $G_l = G \cap \Fq[x_{l+1},\dots,x_n]$
\end{Theorem}

\begin{Definition}
\label{def:quo}
({\it Quotient of Ideals}) If $J_1$ and $J_2$ are ideals in a ring $R$,
then $J_1:J_2$ is the set 
%  \begin{equation}
  $\{f \in R \ |\ f\cdot g \in J_1, \forall g \in J_2\}$ %\nonumber
%  \end{equation}
and is called the {\bf ideal quotient} of $J_1$ by $J_2$, also called
the {\bf colon ideal}.
\end{Definition}

Given generators of $J_1$ and $J_2$, the generators of $J_1:J_2$ can
also be computed using \Grobner bases with elimination (lex) term
orders. We refer the reader to Section 2.3 in \cite{ideals:book} for
further details. 



%%%%% RTTO
%% \begin{Definition}
%% \label{def:rtto}
%% \par {\it Reverse Topological Term Order~\cite{lv:tcad2013}:}
%% The computational complexity of Buchberger's algorithm is exponential
%% in the number of variables $n$. As our work is focused on the circuits,
%% we will describe a term order that renders the set of polynomials for 
%% the gates of the circuit, a \Grobner basis itself. This term order 
%% is called Reverse Topological Term Order (RTTO).

%% \par Let $C$ be an arbitrary combinational
%% circuit. Let $\{x_1, \dots$ $, x_n\}$ denote the set of all variables
%% (signals) in $C$. Starting from the primary outputs, perform
%% a {\it reverse topological traversal} of the circuit and order the
%% variables such that $x_k > x_j$ if $x_k$ appears earlier in the
%% reverse topological order. Impose a lex term order $>$ to represent each
%% gate as a polynomial $f_j$, s.t. $f_j = x_k + tail(f_j)$. Then 
%% set of polynomials $\{f_1,\dots,f_s\}$ corresponding to the gates of the circuits 
%% is a \Grobner basis when RTTO is used for ordering.
%% \end{Definition}
%% % \par {\bf Weak Nullstellensatz and Elimination Theory:} 
%% \begin{Theorem}[{\it The Weak Nullstellensatz over finite fields (from
%% Theorem 3.3 in~\cite{gao:gf-gb-ms})}]
%% \label{thm:weak-ns-ff}
%% {\it For a finite field $\Fq$ and the ring $R = \Fq[x_1, \dots, x_n]$, let
%% $J = \langle f_1, \dots, f_s\rangle \subseteq R$, and let $J_0 = \langle
%% x_1^q-x_1, \dots, x_n^q -  x_n\rangle$ be the ideal of vanishing
%% polynomials. Then $V_{\Fq}(J) = \emptyset \iff 1 \in J + J_0 \iff G =
%% GB(J+J_0) = \{1\}$. }

%% \par To find whether a set of polynomials $f_1,\dots,f_s$ have no common
%% zeros in $\Fq$, we can compute the GB $G$ of
%% $\{f_1,\dots,f_s,x_1^q-x_1,\dots,x_n^q-x_n\}$ and see if $G = \{1\}$. 
%% \end{Theorem}


%% We also need to employ notion of difference of varieties in our theoretical
%% section. The equivalent ideal operation is called the quotient of ideals.


%% In terms of varieties, $V_{\Fq}(J_1:J_2) = V_{\Fq}(J_1) \setminus V_{\Fq}(J_2)$.

%% \par The computer algebra tools like SINGULAR~\cite{DGPS_410} contain implementations for 
%% computing elimination ideals and quotient of ideals.  
  
