//LIB "multivariate_division.lib";
//LIB "multivariate_burg.lib";
LIB "control.lib";
ring r = 2, (z,z2,z1,d0,e2,e1,e0,a,b,c) ,lp;

poly spec = z + ac + a + b + bc + c;

poly f7 = z + z1*z2;
poly f6 = z2 + d0 + e2;
poly f5 = z1 + e0*d0 + e0 + d0;
poly f4 = d0 + e1*c; // unknown gate
poly f3 = e2 + c + 1;
poly f2 = e1 + bc + b + c;
poly f1 = e0 + a + b;

//poly f1_b = e0 + a*b;

poly d_0 = d0^2 -d0 ;
poly e_0 = e0^2 -e0 ;
poly e_1 = e1^2 -e1 ;
poly e_2 = e2^2 -e2 ;

poly a_0 = a^2 - a;
poly b_0 = b^2 - b;
poly c_0 = c^2 - c;

ideal J0i = a_0, b_0, c_0, d_0, e_0, e_1, e_2;
list J0 = a_0, b_0, c_0, d_0, e_0, e_1, e_2;

list JCl = f7,f6,f5,f4;
//poly rem = multivariate_burg(spec,(JCl+J0),J0i);

poly h4 = e0*e2 + e2 + 1;
poly ns = ac + a + bc + b + c; // f-h7*f7-h6*f6-h5*f5-h4*lt(f4)

ideal JCp = h4,f1,f2,f3;
ideal Jq = f1,f2,f3;

matrix T3 = lift(JCp+J0i,ns);
T3;

quotient(groebner(Jq),h4);

//poly p = a*c+a+b*c+b+c;

//matrix T4 = lift(Jq+J0i,p);
//T4;