LIB "primdec.lib";
//ring r = integer, ( z3, z2, z1, s, z0, m, n, o, a_0, a_1, b_0, b_1), lp; 
ring r = integer, ( z3, z2, s, k, i, z1, z0, m, n, o, g, h, a_0, a_1, b_0, b_1), lp; 

proc xorgate(poly g, poly h)
{
	return(g+h-2*g*h);
}

proc orgate(poly g, poly h)
{
	return(g+h-g*h);
}

proc invgate(poly g)
{
	return(1-g);
}

//correct implementation
poly f1 = z0 - a_0*b_0;
poly f2 = m  - a_1*b_0;
poly f3 = n  - a_0*b_1;
poly f4 = o  - a_1*b_1;
poly f5 = z1 - xorgate(m,n);
poly f6 = s - m*n;
poly f7 = z2 - xorgate(s,o);
poly f8 = z3 - s*o;

//redundant implementation
poly fr1 = g - a_1*b_0;
poly fr2 = h - orgate(a_1,b_0);
poly fr3 = i - h*g;
poly fr4 = k - m*i;
poly fr6 = s - k*n;

//buggy implementation
//introducing bug - OR gate instead of AND gate
poly fb6  = s - orgate(m,n);
poly frb6 = s - orgate(k,n);

//vanishing polynomials
poly f9   = a_0^2 - a_0;
poly f10  = a_1^2 - a_1;
poly f11  = b_0^2 - b_0;
poly f12  = b_1^2 - b_1;
poly f13  = z0^2 - z0;
poly f14  = z2^2 - z2;
poly f15  = z3^2 - z3;
poly f16  = s^2 - s;
poly f17  = o^2 - o;
poly f18  = m^2 - m;
poly f19  = n^2 - n;
poly f20  = z1^2 - z1;
poly fr21 = g^2 - g;
poly fr22 = h^2 - h;
poly fr23 = i^2 - i;
poly fr24 = k^2 - k;

poly spec = 8*z3 + 4*z2 + 2*z1 + z0 - 4*a_1*b_1 - 2*a_1*b_0 - 2*a_0*b_1 - a_0*b_0 ;
//poly spec = Z - A*B;

ideal BI  = f1, f2, f3, f4, f5, fb6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20;
ideal CI  = f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20;


ideal rBI  = f1, f2, f3, f4, f5, frb6, fr1, fr2, fr3, fr4, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, fr21, fr22, fr23, fr24;
ideal rCI  = f1, f2, f3, f4, f5, fr6, fr1, fr2, fr3, fr4, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20, fr21, fr22, fr23, fr24;