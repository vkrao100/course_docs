LIB "primdec.lib";
LIB "multivariate_burg.lib";
LIB "linalg.lib";

ring R = (integer,64), (n644,n622,n600,n578,n556,n534,n512,n490,n468,n446,n424,n402,n380,n358,n336,n314,n292,n270,n248,n226,n206,z63,n643,n642,a63,z62,n640,n639,n638,n637,n636,n635,n634,z61,n632,n631,n630,n629,n628,b61,a61,z60,n626,n621,b60,n620,a60,z59,n618,n617,n616,n615,n614,n613,n612,z58,n610,n609,n608,n607,n606,b58,a58,z57,n604,n599,b57,n598,a57,z56,n596,n595,n594,n593,n592,n591,n590,z55,n588,n587,n586,n585,n584,b55,a55,z54,n582,n577,b54,n576,a54,z53,n574,n573,n572,n571,n570,n569,n568,z52,n566,n565,n564,n563,n562,b52,a52,z51,n560,n555,b51,n554,a51,z50,n552,n551,n550,n549,n548,n547,n546,z49,n544,n543,n542,n541,n540,b49,a49,z48,n538,n533,b48,n532,a48,z47,n530,n529,n528,n527,n526,n525,n524,z46,n522,n521,n520,n519,n518,b46,a46,z45,n516,n511,b45,n510,a45,z44,n508,n507,n506,n505,n504,n503,n502,z43,n500,n499,n498,n497,n496,b43,a43,z42,n494,n489,b42,n488,a42,z41,n486,n485,n484,n483,n482,n481,n480,z40,n478,n477,n476,n475,n474,b40,a40,z39,n472,n467,b39,n466,a39,z38,n464,n463,n462,n461,n460,n459,n458,z37,n456,n455,n454,n453,n452,b37,a37,z36,n450,n445,b36,n444,a36,z35,n442,n441,n440,n439,n438,n437,n436,z34,n434,n433,n432,n431,n430,b34,a34,z33,n428,n423,b33,n422,a33,z32,n420,n419,n418,n417,n416,n415,n414,z31,n412,n411,n410,n409,n408,b31,a31,z30,n406,n401,b30,n400,a30,z29,n398,n397,n396,n395,n394,n393,n392,z28,n390,n389,n388,n387,n386,b28,a28,z27,n384,n379,b27,n378,a27,z26,n376,n375,n374,n373,n372,n371,n370,z25,n368,n367,n366,n365,n364,b25,a25,z24,n362,n357,b24,n356,a24,z23,n354,n353,n352,n351,n350,n349,n348,z22,n346,n345,n344,n343,n342,b22,a22,z21,n340,n335,b21,n334,a21,z20,n332,n331,n330,n329,n328,n327,n326,z19,n324,n323,n322,n321,n320,b19,a19,z18,n318,n313,b18,n312,a18,z17,n310,n309,n308,n307,n306,n305,n304,z16,n302,n301,n300,n299,n298,b16,a16,z15,n296,n291,b15,n290,a15,z14,n288,n287,n286,n285,n284,n283,n282,z13,n280,n279,n278,n277,n276,b13,a13,z12,n274,n269,b12,n268,a12,z11,n266,n265,n264,n263,n262,n261,n260,z10,n258,n257,n256,n255,n254,b10,a10,z9,n252,n247,b9,n246,a9,z8,n244,n243,n242,n241,n240,n239,n238,z7,n236,n235,n234,n233,n232,b7,a7,z6,n230,n225,b6,n224,a6,z5,n222,n221,n220,n219,n218,z4,n216,n215,n214,n213,n212,b4,a4,z3,n210,n205,b3,n204,a3,z2,n202,n201,n200,n199,n198,z1,n196,n195,b1,a1,z0,b0,a0,z64,n652,n651,n648,n650,b63,n647,b62,a62,n625,b59,a59,n603,b56,a56,n581,b53,a53,n559,b50,a50,n537,b47,a47,n515,b44,a44,n493,b41,a41,n471,b38,a38,n449,b35,a35,n427,b32,a32,n405,b29,a29,n383,b26,a26,n361,b23,a23,n339,b20,a20,n317,b17,a17,n295,b14,a14,n273,b11,a11,n251,b8,a8,n229,b5,a5,n209,b2,a2),lp;

//minpoly = X^64+X^21+X^19+X^4+1;

ideal J1 =
n200+n196*b1+1,
n242+b7*a7+1,
n264+b10*a10+1,
n286+b13*a13+1,
n308+b16*a16+1,
n330+b19*a19+1,
n352+b22*a22+1,
n374+b25*a25+1,
n396+b28*a28+1,
n418+b31*a31+1,
n440+b34*a34+1,
n462+b37*a37+1,
n484+b40*a40+1,
n506+b43*a43+1,
n528+b46*a46+1,
n550+b49*a49+1,
n572+b52*a52+1,
n594+b55*a55+1,
n616+b58*a58+1,
n638+b61*a61+1,
n196+b0*a0,
n202+n201*n200,
n209+b2*a2,
n222+n221*n220,
n229+b5*a5,
n243+n242*n241,
n244+n243*n240,
n251+b8*a8,
n265+n264*n263,
n266+n265*n262,
n273+b11*a11,
n287+n286*n285,
n288+n287*n284,
n295+b14*a14,
n309+n308*n307,
n310+n309*n306,
n317+b17*a17,
n331+n330*n329,
n332+n331*n328,
n339+b20*a20,
n353+n352*n351,
n354+n353*n350,
n361+b23*a23,
n375+n374*n373,
n376+n375*n372,
n383+b26*a26,
n397+n396*n395,
n398+n397*n394,
n405+b29*a29,
n419+n418*n417,
n420+n419*n416,
n427+b32*a32,
n441+n440*n439,
n442+n441*n438,
n449+b35*a35,
n463+n462*n461,
n464+n463*n460,
n471+b38*a38,
n485+n484*n483,
n486+n485*n482;

poly uc = n493+b41*a41;

ideal J2 = 
n507+n506*n505,
n508+n507*n504,
n515+b44*a44,
n529+n528*n527,
n530+n529*n526,
n537+b47*a47,
n551+n550*n549,
n552+n551*n548,
n559+b50*a50,
n573+n572*n571,
n574+n573*n570,
n581+b53*a53,
n595+n594*n593,
n596+n595*n592,
n603+b56*a56,
n617+n616*n615,
n618+n617*n614,
n625+b59*a59,
n639+n638*n637,
n640+n639*n636,
n647+b62*a62,
n214+n213*n210+n213+n210+1,
n234+n233*n230+n233+n230+1,
n256+n255*n252+n255+n252+1,
n278+n277*n274+n277+n274+1,
n300+n299*n296+n299+n296+1,
n322+n321*n318+n321+n318+1,
n344+n343*n340+n343+n340+1,
n366+n365*n362+n365+n362+1,
n388+n387*n384+n387+n384+1,
n410+n409*n406+n409+n406+1,
n432+n431*n428+n431+n428+1,
n454+n453*n450+n453+n450+1,
n476+n475*n472+n475+n472+1,
n498+n497*n494+n497+n494+1,
n520+n519*n516+n519+n516+1,
n542+n541*n538+n541+n538+1,
n564+n563*n560+n563+n560+1,
n586+n585*n582+n585+n582+1,
n608+n607*n604+n607+n604+1,
n630+n629*n626+n629+n626+1,
n651+n648*n650+n648+n650+1,
n216+n215*n214+n215+n214,
n236+n235*n234+n235+n234,
n258+n257*n256+n257+n256,
n280+n279*n278+n279+n278,
n302+n301*n300+n301+n300,
n324+n323*n322+n323+n322,
n346+n345*n344+n345+n344,
n368+n367*n366+n367+n366,
n390+n389*n388+n389+n388,
n412+n411*n410+n411+n410,
n434+n433*n432+n433+n432,
n456+n455*n454+n455+n454,
n478+n477*n476+n477+n476,
n500+n499*n498+n499+n498,
n522+n521*n520+n521+n520,
n544+n543*n542+n543+n542,
n566+n565*n564+n565+n564,
n588+n587*n586+n587+n586,
n610+n609*n608+n609+n608,
n632+n631*n630+n631+n630,
z64+n652*n651+n652+n651,
z0+b0+a0,
n195+b1+a1,
z1+n196+n195,
n199+n198+b2,
z2+n202+n199,
n205+b3+n204,
z3+n210+n205,
n212+b4+a4,
z4+n216+n212,
n219+n218+b5,
z5+n222+n219,
n225+b6+n224,
z6+n230+n225,
n232+b7+a7,
z7+n236+n232,
n239+n238+b8,
z8+n244+n239,
n247+b9+n246,
z9+n252+n247,
n254+b10+a10,
z10+n258+n254,
n261+n260+b11,
z11+n266+n261,
n269+b12+n268,
z12+n274+n269,
n276+b13+a13,
z13+n280+n276,
n283+n282+b14,
z14+n288+n283,
n291+b15+n290,
z15+n296+n291,
n298+b16+a16,
z16+n302+n298,
n305+n304+b17,
z17+n310+n305,
n313+b18+n312,
z18+n318+n313,
n320+b19+a19,
z19+n324+n320,
n327+n326+b20,
z20+n332+n327,
n335+b21+n334,
z21+n340+n335,
n342+b22+a22,
z22+n346+n342,
n349+n348+b23,
z23+n354+n349,
n357+b24+n356,
z24+n362+n357,
n364+b25+a25,
z25+n368+n364,
n371+n370+b26,
z26+n376+n371,
n379+b27+n378,
z27+n384+n379,
n386+b28+a28,
z28+n390+n386,
n393+n392+b29,
z29+n398+n393,
n401+b30+n400,
z30+n406+n401,
n408+b31+a31,
z31+n412+n408,
n415+n414+b32,
z32+n420+n415,
n423+b33+n422,
z33+n428+n423,
n430+b34+a34,
z34+n434+n430,
n437+n436+b35,
z35+n442+n437,
n445+b36+n444,
z36+n450+n445,
n452+b37+a37,
z37+n456+n452,
n459+n458+b38,
z38+n464+n459,
n467+b39+n466,
z39+n472+n467,
n474+b40+a40,
z40+n478+n474,
n481+n480+b41,
z41+n486+n481,
n489+b42+n488,
z42+n494+n489,
n496+b43+a43,
z43+n500+n496,
n503+n502+b44,
z44+n508+n503,
n511+b45+n510,
z45+n516+n511,
n518+b46+a46,
z46+n522+n518,
n525+n524+b47,
z47+n530+n525,
n533+b48+n532,
z48+n538+n533,
n540+b49+a49,
z49+n544+n540,
n547+n546+b50,
z50+n552+n547,
n555+b51+n554,
z51+n560+n555,
n562+b52+a52,
z52+n566+n562,
n569+n568+b53,
z53+n574+n569,
n577+b54+n576,
z54+n582+n577,
n584+b55+a55,
z55+n588+n584,
n591+n590+b56,
z56+n596+n591,
n599+b57+n598,
z57+n604+n599,
n606+b58+a58,
z58+n610+n606,
n613+n612+b59,
z59+n618+n613,
n621+b60+n620,
z60+n626+n621,
n628+b61+a61,
z61+n632+n628,
n635+n634+b62,
z62+n640+n635,
n643+n642+b63,
z63+n643+n648,
n198+a2+1,
n204+a3+1,
n206+b2+1,
n213+b3+1,
n218+a5+1,
n224+a6+1,
n226+b5+1,
n233+b6+1,
n238+a8+1,
n246+a9+1,
n248+b8+1,
n255+b9+1,
n260+a11+1,
n268+a12+1,
n270+b11+1,
n277+b12+1,
n282+a14+1,
n290+a15+1,
n292+b14+1,
n299+b15+1,
n304+a17+1,
n312+a18+1,
n314+b17+1,
n321+b18+1,
n326+a20+1,
n334+a21+1,
n336+b20+1,
n343+b21+1,
n348+a23+1,
n356+a24+1,
n358+b23+1,
n365+b24+1,
n370+a26+1,
n378+a27+1,
n380+b26+1,
n387+b27+1,
n392+a29+1,
n400+a30+1,
n402+b29+1,
n409+b30+1,
n414+a32+1,
n422+a33+1,
n424+b32+1,
n431+b33+1,
n436+a35+1,
n444+a36+1,
n446+b35+1,
n453+b36+1,
n458+a38+1,
n466+a39+1,
n468+b38+1,
n475+b39+1,
n480+a41+1,
n488+a42+1,
n490+b41+1,
n497+b42+1,
n502+a44+1,
n510+a45+1,
n512+b44+1,
n519+b45+1,
n524+a47+1,
n532+a48+1,
n534+b47+1,
n541+b48+1,
n546+a50+1,
n554+a51+1,
n556+b50+1,
n563+b51+1,
n568+a53+1,
n576+a54+1,
n578+b53+1,
n585+b54+1,
n590+a56+1,
n598+a57+1,
n600+b56+1,
n607+b57+1,
n612+a59+1,
n620+a60+1,
n622+b59+1,
n629+b60+1,
n634+a62+1,
n642+a63+1,
n644+b62+1,
n650+b63+1;

ideal J0 = 
a0^2 + a0,
a1^2 + a1,
a2^2 + a2,
a3^2 + a3,
a4^2 + a4,
a5^2 + a5,
a6^2 + a6,
a7^2 + a7,
a8^2 + a8,
a9^2 + a9,
a10^2 + a10,
a11^2 + a11,
a12^2 + a12,
a13^2 + a13,
a14^2 + a14,
a15^2 + a15,
a16^2 + a16,
a17^2 + a17,
a18^2 + a18,
a19^2 + a19,
a20^2 + a20,
a21^2 + a21,
a22^2 + a22,
a23^2 + a23,
a24^2 + a24,
a25^2 + a25,
a26^2 + a26,
a27^2 + a27,
a28^2 + a28,
a29^2 + a29,
a30^2 + a30,
a31^2 + a31,
a32^2 + a32,
a33^2 + a33,
a34^2 + a34,
a35^2 + a35,
a36^2 + a36,
a37^2 + a37,
a38^2 + a38,
a39^2 + a38,
a40^2 + a40,
a41^2 + a41,
a42^2 + a42,
a43^2 + a43,
a44^2 + a44,
a45^2 + a45,
a46^2 + a46,
a47^2 + a47,
a48^2 + a48,
a49^2 + a49,
a50^2 + a50,
a51^2 + a51,
a52^2 + a52,
a53^2 + a53,
a54^2 + a54,
a55^2 + a55,
a56^2 + a56,
a57^2 + a57,
a58^2 + a58,
a59^2 + a59,
a60^2 + a60,
a61^2 + a61,
a62^2 + a62,
a63^2 + a63,
b0^2 + b0,
b1^2 + b1,
b2^2 + b2,
b3^2 + b3,
b4^2 + b4,
b5^2 + b5,
b6^2 + b6,
b7^2 + b7,
b8^2 + b8,
b9^2 + b9,
b10^2 + b10,
b11^2 + b11,
b12^2 + b12,
b13^2 + b13,
b14^2 + b14,
b15^2 + b15,
b16^2 + b16,
b17^2 + b17,
b18^2 + b18,
b19^2 + b19,
b20^2 + b20,
b21^2 + b21,
b22^2 + b22,
b23^2 + b23,
b24^2 + b24,
b25^2 + b25,
b26^2 + b26,
b27^2 + b27,
b28^2 + b28,
b29^2 + b29,
b30^2 + b30,
b31^2 + b31,
a32^2 + b32,
b33^2 + b33,
b34^2 + b34,
b35^2 + b35,
b36^2 + b36,
b37^2 + b37,
b38^2 + b38,
b39^2 + b38,
b40^2 + b40,
b41^2 + b41,
b42^2 + b42,
b43^2 + b43,
b44^2 + b44,
b45^2 + b45,
b46^2 + b46,
b47^2 + b47,
b48^2 + b48,
b49^2 + b49,
b50^2 + b50,
b51^2 + b51,
b52^2 + b52,
b53^2 + b53,
b54^2 + b54,
b55^2 + b55,
b56^2 + b56,
b57^2 + b57,
b58^2 + b58,
b59^2 + b59,
b60^2 + b60,
b61^2 + b61,
b62^2 + b62,
b63^2 + b63;

poly spec = z0*2^0 + z1*2^1 + z2*2^2 + z3*2^3 + z4*2^4 + z5*2^5 + z6*2^6 + z7*2^7 + z8*2^8 + z9*2^9 + z10*2^10 + z11*2^11 + z12*2^12 + z13*2^13 + z14*2^14 + z15*2^15 + z16*2^16 + z17*2^17 + z18*2^18 + z19*2^19 + z20*2^20 + z21*2^21 + z22*2^22 + z23*2^23 + z24*2^24 + z25*2^25 + z26*2^26 + z27*2^27 + z28*2^28 + z29*2^29 + z30*2^30 + z31*2^31 + z32*2^32 + z33*2^33 + z34*2^34 + z35*2^35 + z36*2^36 + z37*2^37 + z38*2^38 + z39*2^39 + z40*2^40 + z41*2^41 + z42*2^42 + z43*2^43 + z44*2^44 + z45*2^45 + z46*2^46 + z47*2^47 + z48*2^48 + z49*2^49 + z50*2^50 + z51*2^51 + z52*2^52 + z53*2^53 + z54*2^54 + z55*2^55 + z56*2^56 + z57*2^57 + z58*2^58 + z59*2^59 + z60*2^60 + z61*2^61 + z62*2^62 + z63*2^63 + z64*2^64-(a0+b0+2*a1+2*b1+4*a2+4*b2+8*a3+8*b3+16*a4+16*b4+32*a5+32*b5+64*a6+64*b6+128*a7+128*b7+256*a8+256*b8+512*a9+512*b9+1024*a10+1024*b10+2048*a11+2048*b11+4096*a12+4096*b12+8192*a13+8192*b13+16384*a14+16384*b14+32768*a15+32768*b15+65536*a16+65536*b16+131072*a17+131072*b17+262144*a18+262144*b18+524288*a19+524288*b19+1048576*a20+1048576*b20+2097152*a21+2097152*b21+4194304*a22+4194304*b22+8388608*a23+8388608*b23+16777216*a24+16777216*b24+33554432*a25+33554432*b25+67108864*a26+67108864*b26+134217728*a27+134217728*b27+268435456*a28+268435456*b28+536870912*a29+536870912*b29+1073741824*a30+1073741824*b30+2147483648*a31+2147483648*b31+4294967296*a32+4294967296*b32+8589934592*a33+8589934592*b33+17179869184*a34+17179869184*b34+34359738368*a35+34359738368*b35+68719476736*a36+68719476736*b36+137438953472*a37+137438953472*b37+274877906944*a38+274877906944*b38+549755813888*a39+549755813888*b39+1099511627776*a40+1099511627776*b40+2199023255552*a41+2199023255552*b41+4398046511104*a42+4398046511104*b42+8796093022208*a43+8796093022208*b43+17592186044416*a44+17592186044416*b44+35184372088832*a45+35184372088832*b45+70368744177664*a46+70368744177664*b46+140737488355328*a47+140737488355328*b47+281474976710656*a48+281474976710656*b48+562949953421312*a49+562949953421312*b49+1125899906842624*a50+1125899906842624*b50+2251799813685248*a51+2251799813685248*b51+4503599627370496*a52+4503599627370496*b52+9007199254740992*a53+9007199254740992*b53+18014398509481984*a54+18014398509481984*b54+36028797018963968*a55+36028797018963968*b55+72057594037927936*a56+72057594037927936*b56+144115188075855872*a57+144115188075855872*b57+288230376151711744*a58+288230376151711744*b58+576460752303423488*a59+576460752303423488*b59+1152921504606846976*a60+1152921504606846976*b60+2305843009213693952*a61+2305843009213693952*b61+4611686018427387904*a62+4611686018427387904*b62+9223372036854775808*a63+9223372036854775808*b63);

poly quo;
poly rem;

poly prem = reduce(spec,J2+J0);

"partial remainder",prem;

rem, quo = multivariate_burg(prem,lead(uc),J0); 

"remainder",rem;
"quotient",quo;

ideal dec = variables(quo);
ideal JCp = quo,J2;

if (size(dec)>=1)
{
	"quotient is not a constant";
	matrix T3 = lift(JCp+J0,rem);
	poly sol  = T3[1,1];
}
else
{	
	"quotient is a constant";
	//matrix quoi = inverse(quo);
	//quoi;
	//poly irem   = quoi[1,1]*rem;
	//poly sol    = reduce(irem,J2);
	matrix T3 = lift(JCp+J0,rem);
	poly sol  = T3[1,1];
}

"solution for P is ",sol;