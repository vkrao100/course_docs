LIB "linalg.lib";
LIB "dmodapp.lib";
LIB "my_proc.lib";
ring R = (2,X),(Y, A, B, y_15_, y_14_, y_13_, y_12_, y_11_, y_10_, y_9_, y_8_, y_7_, y_6_, y_5_, y_4_, y_3_, y_2_, y_1_, y_0_, s2_4_, s2_5_, s2_6_, s2_7_, s2_8_, s2_9_, s2_10_, s2_11_, s2_12_, s2_13_, s2_14_, s2_15_, t1_4_, t1_5_, t1_6_, t1_7_, t1_8_, t1_9_, t1_10_, t1_11_, t1_12_, t1_13_, t1_14_, t1_15_, t1_16_, t1_17_, t1_18_, t1_19_, t1_20_, t1_21_, t1_22_, t1_23_, t1_24_, t1_25_, t1_26_, s2_0_, s2_1_, s2_2_, s2_3_, t1_0_, t1_1_, t1_2_, t1_3_, T2_0_, T2_1_, T2_2_, T2_3_, T2_4_, T2_5_, T2_6_, T2_7_, T2_8_, T2_9_, T2_10_, T2_11_, T2_12_, T2_13_, T2_14_, T2_15_, T2_16_, T2_17_, T2_18_, T2_19_, T2_20_, T2_21_, T2_22_, T2_23_, T2_24_, T2_25_, T2_26_, T2_27_, T2_28_, T2_29_, T2_31_, T2_32_, T2_33_, T2_34_, T2_36_, T2_37_, T2_38_, T2_39_, T2_41_, T2_42_, T2_43_, T2_44_, T2_46_, T2_47_, T2_48_, T2_49_, T2_51_, T2_52_, T2_53_, T2_54_, T2_56_, T2_57_, T2_58_, T2_59_, T2_61_, T2_62_, T2_63_, T2_65_, T2_66_, T2_67_, T2_69_, T2_70_, T2_71_, T2_73_, T2_74_, T2_76_, T2_77_, T2_79_, T2_80_, T2_82_, T2_84_, q3_0_, q3_1_, q3_2_, q3_3_, q3_4_, q3_5_, q3_6_, q3_7_, q3_8_, q3_9_, q3_10_, t1_27_, t1_28_, t1_29_, t1_30_, q2_4_, q2_5_, q2_6_, q2_7_, q2_8_, q2_9_, q2_10_, q2_11_, q2_12_, q2_13_, q2_14_, q2_15_, q2_16_, q2_17_, q2_18_, q2_19_, q2_20_, q2_21_, q2_22_, q2_23_, q2_24_, q2_25_, q2_26_, T2_30_, T2_35_, T2_40_, T2_45_, T2_50_, T2_55_, T2_60_, T2_64_, T2_68_, T2_72_, T2_75_, T2_78_, T2_81_, T2_83_, q3_11_, q3_12_, q3_13_, q3_14_, q2_0_, q2_1_, q2_2_, q2_3_, T1_0_, T1_1_, T1_2_, T1_3_, T1_4_, T1_5_, T1_6_, T1_7_, T1_8_, T1_9_, T1_10_, T1_11_, T1_12_, T1_13_, T1_14_, T1_15_, T1_16_, T1_17_, T1_18_, T1_19_, T1_20_, T1_21_, T1_22_, T1_23_, T1_24_, T1_25_, T1_26_, T1_27_, T1_28_, T1_29_, T1_31_, T1_32_, T1_33_, T1_34_, T1_36_, T1_37_, T1_38_, T1_39_, T1_41_, T1_42_, T1_43_, T1_44_, T1_46_, T1_47_, T1_48_, T1_49_, T1_51_, T1_52_, T1_53_, T1_54_, T1_56_, T1_57_, T1_58_, T1_59_, T1_61_, T1_62_, T1_63_, T1_65_, T1_66_, T1_67_, T1_69_, T1_70_, T1_71_, T1_73_, T1_74_, T1_76_, T1_77_, T1_79_, T1_80_, T1_82_, T1_84_, s1_4_, s1_5_, s1_6_, s1_7_, s1_8_, s1_9_, s1_10_, s1_11_, s1_12_, s1_13_, s1_14_, s1_15_, q2_27_, q2_28_, q2_29_, q2_30_, q1_0_, q1_1_, q1_2_, q1_3_, q1_4_, q1_5_, q1_6_, q1_7_, q1_8_, q1_9_, q1_10_, T1_30_, T1_35_, T1_40_, T1_45_, T1_50_, T1_55_, T1_60_, T1_64_, T1_68_, T1_72_, T1_75_, T1_78_, T1_81_, T1_83_, r_26_, r_25_, r_24_, r_23_, r_22_, r_21_, r_20_, r_19_, r_18_, r_17_, r_16_, r_15_, r_14_, r_13_, r_12_, r_11_, r_10_, r_9_, r_8_, r_7_, r_6_, r_5_, r_4_, s1_0_, s1_1_, s1_2_, s1_3_, q1_11_, q1_12_, q1_13_, q1_14_, r_30_, r_29_, r_28_, r_27_, r_3_, r_2_, r_1_, r_0_, T_85_, T_84_, T_83_, T_82_, T_81_, T_80_, T_79_, T_78_, T_77_, T_76_, T_75_, T_74_, T_73_, T_72_, T_71_, T_70_, T_69_, T_68_, T_67_, T_66_, T_65_, T_64_, T_63_, T_62_, T_61_, T_60_, T_59_, T_58_, T_57_, T_56_, T_55_, T_54_, T_53_, T_52_, T_51_, T_50_, T_49_, T_48_, T_47_, T_46_, T_45_, T_44_, T_43_, T_42_, T_41_, T_40_, T_39_, T_38_, T_37_, T_36_, T_35_, T_34_, T_33_, T_32_, T_31_, T_30_, T_29_, T_28_, T_27_, T_26_, T_25_, T_24_, T_23_, T_22_, T_21_, T_20_, T_19_, T_18_, T_17_, T_16_, T_15_, T_14_, T_13_, T_12_, T_11_, T_10_, T_9_, T_8_, T_7_, T_6_, T_5_, T_4_, T_3_, T_2_, T_1_, T_0_, b_15_, b_14_, b_13_, b_12_, b_11_, b_10_, b_9_, b_8_, b_7_, b_6_, b_5_, b_4_, b_3_, b_2_, b_1_, b_0_, a_15_, a_14_, a_13_, a_12_, a_11_, a_10_, a_9_, a_8_, a_7_, a_6_, a_5_, a_4_, a_3_, a_2_, a_1_, a_0_),lp;

minpoly = X^16+X^8+X^5+X^3+X^2+X^1+1;

rtimer=0;
system("--ticks-per-sec",1000);
int t0 = rtimer;

ideal J1 = 
Y + y_0_*X^0 + y_1_*X^1 + y_2_*X^2 + y_3_*X^3 + y_4_*X^4 + y_5_*X^5 + y_6_*X^6 + y_7_*X^7 + y_8_*X^8 + y_9_*X^9 + y_10_*X^10 + y_11_*X^11 + y_12_*X^12 + y_13_*X^13 + y_14_*X^14 + y_15_*X^15,
T_0_ + a_0_*b_4_+a_1_*b_3_+a_2_*b_2_,
T_1_ + a_3_*b_1_+a_4_*b_0_,
T_2_ + a_0_*b_5_+a_1_*b_4_+a_2_*b_3_,
T_3_ + a_3_*b_2_+a_4_*b_1_+a_5_*b_0_,
T_4_ + a_0_*b_6_+a_1_*b_5_+a_2_*b_4_,
T_5_ + a_3_*b_3_+a_4_*b_2_+a_5_*b_1_,
T_6_ + a_6_*b_0_,
T_7_ + a_0_*b_7_+a_1_*b_6_+a_2_*b_5_,
T_8_ + a_3_*b_4_+a_4_*b_3_+a_5_*b_2_,
T_9_ + a_6_*b_1_+a_7_*b_0_,
T_10_ + a_0_*b_8_+a_1_*b_7_+a_2_*b_6_,
T_11_ + a_3_*b_5_+a_4_*b_4_+a_5_*b_3_,
T_12_ + a_6_*b_2_+a_7_*b_1_+a_8_*b_0_,
T_13_ + a_0_*b_9_+a_1_*b_8_+a_2_*b_7_,
T_14_ + a_3_*b_6_+a_4_*b_5_+a_5_*b_4_,
T_15_ + a_6_*b_3_+a_7_*b_2_+a_8_*b_1_,
T_16_ + a_9_*b_0_,
T_17_ + a_0_*b_10_+a_1_*b_9_+a_2_*b_8_,
T_18_ + a_3_*b_7_+a_4_*b_6_+a_5_*b_5_,
T_19_ + a_6_*b_4_+a_7_*b_3_+a_8_*b_2_,
T_20_ + a_9_*b_1_+a_10_*b_0_,
T_21_ + a_0_*b_11_+a_1_*b_10_+a_2_*b_9_,
T_22_ + a_3_*b_8_+a_4_*b_7_+a_5_*b_6_,
T_23_ + a_6_*b_5_+a_7_*b_4_+a_8_*b_3_,
T_24_ + a_9_*b_2_+a_10_*b_1_+a_11_*b_0_,
T_25_ + a_0_*b_12_+a_1_*b_11_+a_2_*b_10_,
T_26_ + a_3_*b_9_+a_4_*b_8_+a_5_*b_7_,
T_27_ + a_6_*b_6_+a_7_*b_5_+a_8_*b_4_,
T_28_ + a_9_*b_3_+a_10_*b_2_+a_11_*b_1_,
T_29_ + a_12_*b_0_,
T_30_ + a_0_*b_13_+a_1_*b_12_+a_2_*b_11_,
T_31_ + a_3_*b_10_+a_4_*b_9_+a_5_*b_8_,
T_32_ + a_6_*b_7_+a_7_*b_6_+a_8_*b_5_,
T_33_ + a_9_*b_4_+a_10_*b_3_+a_11_*b_2_,
T_34_ + a_12_*b_1_+a_13_*b_0_,
T_35_ + a_0_*b_14_+a_1_*b_13_+a_2_*b_12_,
T_36_ + a_3_*b_11_+a_4_*b_10_+a_5_*b_9_,
T_37_ + a_6_*b_8_+a_7_*b_7_+a_8_*b_6_,
T_38_ + a_9_*b_5_+a_10_*b_4_+a_11_*b_3_,
T_39_ + a_12_*b_2_+a_13_*b_1_+a_14_*b_0_,
T_40_ + a_0_*b_15_+a_1_*b_14_+a_2_*b_13_,
T_41_ + a_3_*b_12_+a_4_*b_11_+a_5_*b_10_,
T_42_ + a_6_*b_9_+a_7_*b_8_+a_8_*b_7_,
T_43_ + a_9_*b_6_+a_10_*b_5_+a_11_*b_4_,
T_44_ + a_12_*b_3_+a_13_*b_2_+a_14_*b_1_,
T_45_ + a_15_*b_0_,
T_46_ + a_1_*b_15_+a_2_*b_14_+a_3_*b_13_,
T_47_ + a_4_*b_12_+a_5_*b_11_+a_6_*b_10_,
T_48_ + a_7_*b_9_+a_8_*b_8_+a_9_*b_7_,
T_49_ + a_10_*b_6_+a_11_*b_5_+a_12_*b_4_,
T_50_ + a_13_*b_3_+a_14_*b_2_+a_15_*b_1_,
T_51_ + a_2_*b_15_+a_3_*b_14_+a_4_*b_13_,
T_52_ + a_5_*b_12_+a_6_*b_11_+a_7_*b_10_,
T_53_ + a_8_*b_9_+a_9_*b_8_+a_10_*b_7_,
T_54_ + a_11_*b_6_+a_12_*b_5_+a_13_*b_4_,
T_55_ + a_14_*b_3_+a_15_*b_2_,
T_56_ + a_3_*b_15_+a_4_*b_14_+a_5_*b_13_,
T_57_ + a_6_*b_12_+a_7_*b_11_+a_8_*b_10_,
T_58_ + a_9_*b_9_+a_10_*b_8_+a_11_*b_7_,
T_59_ + a_12_*b_6_+a_13_*b_5_+a_14_*b_4_,
T_60_ + a_15_*b_3_,
T_61_ + a_4_*b_15_+a_5_*b_14_+a_6_*b_13_,
T_62_ + a_7_*b_12_+a_8_*b_11_+a_9_*b_10_,
T_63_ + a_10_*b_9_+a_11_*b_8_+a_12_*b_7_,
T_64_ + a_13_*b_6_+a_14_*b_5_+a_15_*b_4_,
T_65_ + a_5_*b_15_+a_6_*b_14_+a_7_*b_13_,
T_66_ + a_8_*b_12_+a_9_*b_11_+a_10_*b_10_,
T_67_ + a_11_*b_9_+a_12_*b_8_+a_13_*b_7_,
T_68_ + a_14_*b_6_+a_15_*b_5_,
T_69_ + a_6_*b_15_+a_7_*b_14_+a_8_*b_13_,
T_70_ + a_9_*b_12_+a_10_*b_11_+a_11_*b_10_,
T_71_ + a_12_*b_9_+a_13_*b_8_+a_14_*b_7_,
T_72_ + a_15_*b_6_,
T_73_ + a_7_*b_15_+a_8_*b_14_+a_9_*b_13_,
T_74_ + a_10_*b_12_+a_11_*b_11_+a_12_*b_10_,
T_75_ + a_13_*b_9_+a_14_*b_8_+a_15_*b_7_,
T_76_ + a_8_*b_15_+a_9_*b_14_+a_10_*b_13_,
T_77_ + a_11_*b_12_+a_12_*b_11_+a_13_*b_10_,
T_78_ + a_14_*b_9_+a_15_*b_8_,
T_79_ + a_9_*b_15_+a_10_*b_14_+a_11_*b_13_,
T_80_ + a_12_*b_12_+a_13_*b_11_+a_14_*b_10_,
T_81_ + a_15_*b_9_,
T_82_ + a_10_*b_15_+a_11_*b_14_+a_12_*b_13_,
T_83_ + a_13_*b_12_+a_14_*b_11_+a_15_*b_10_,
T_84_ + a_11_*b_15_+a_12_*b_14_+a_13_*b_13_,
T_85_ + a_14_*b_12_+a_15_*b_11_,
r_0_ + a_0_*b_0_,
r_1_ + a_0_*b_1_+a_1_*b_0_,
r_2_ + a_0_*b_2_+a_1_*b_1_+a_2_*b_0_,
r_3_ + a_0_*b_3_+a_1_*b_2_+a_2_*b_1_+a_3_*b_0_,
r_27_ + a_12_*b_15_+a_13_*b_14_+a_14_*b_13_+a_15_*b_12_,
r_28_ + a_13_*b_15_+a_14_*b_14_+a_15_*b_13_,
r_29_ + a_14_*b_15_+a_15_*b_14_,
r_30_ + a_15_*b_15_,
q1_14_ + r_30_,
q1_13_ + r_29_,
q1_12_ + r_28_,
q1_11_ + r_27_,
s1_3_ + r_3_,
s1_2_ + r_2_,
s1_1_ + r_1_,
s1_0_ + r_0_,
r_4_ + T_0_+T_1_,
r_5_ + T_2_+T_3_,
r_6_ + T_4_+T_5_+T_6_,
r_7_ + T_7_+T_8_+T_9_,
r_8_ + T_10_+T_11_+T_12_,
r_9_ + T_13_+T_14_+T_15_+T_16_,
r_10_ + T_17_+T_18_+T_19_+T_20_,
r_11_ + T_21_+T_22_+T_23_+T_24_,
r_12_ + T_25_+T_26_+T_27_+T_28_+T_29_,
r_13_ + T_30_+T_31_+T_32_+T_33_+T_34_,
r_14_ + T_35_+T_36_+T_37_+T_38_+T_39_,
r_15_ + T_40_+T_41_+T_42_+T_43_+T_44_+T_45_,
r_16_ + T_46_+T_47_+T_48_+T_49_+T_50_,
r_17_ + T_51_+T_52_+T_53_+T_54_+T_55_,
r_18_ + T_56_+T_57_+T_58_+T_59_+T_60_,
r_19_ + T_61_+T_62_+T_63_+T_64_,
r_20_ + T_65_+T_66_+T_67_+T_68_,
r_21_ + T_69_+T_70_+T_71_+T_72_,
r_22_ + T_73_+T_74_+T_75_,
r_23_ + T_76_+T_77_+T_78_,
r_24_ + T_79_+T_80_+T_81_,
r_25_ + T_82_+T_83_,
r_26_ + T_84_+T_85_,
T1_83_ + 0*q1_14_+0*q1_13_+0*q1_12_,
T1_81_ + 0*q1_14_+0*q1_13_+0*q1_12_,
T1_78_ + 0*q1_14_+0*q1_13_+0*q1_12_,
T1_75_ + 0*q1_14_+0*q1_13_+0*q1_12_,
T1_72_ + 1*q1_14_+0*q1_13_+0*q1_12_,
T1_68_ + 0*q1_14_+1*q1_13_+0*q1_12_,
T1_64_ + 0*q1_14_+0*q1_13_+1*q1_12_,
T1_60_ + 1*q1_14_+0*q1_13_+0*q1_12_,
T1_55_ + 0*q1_14_+1*q1_13_+0*q1_12_,
T1_50_ + 1*q1_14_+0*q1_13_+1*q1_12_,
T1_45_ + 1*q1_14_+1*q1_13_+0*q1_12_,
T1_40_ + 1*q1_14_+1*q1_13_+1*q1_12_,
T1_35_ + 1*q1_14_+1*q1_13_+1*q1_12_,
T1_30_ + 1*q1_13_+1*q1_12_+1*q1_11_,
q1_10_ + r_26_,
q1_9_ + r_25_,
q1_8_ + r_24_,
q1_7_ + r_23_,
q1_6_ + r_22_,
q1_5_ + r_21_,
q1_4_ + r_20_,
q1_3_ + r_19_,
q1_2_ + r_18_,
q1_1_ + r_17_,
q1_0_ + r_16_,
q2_30_ + 1*q1_14_,
q2_29_ + 0*q1_14_+1*q1_13_,
q2_28_ + 0*q1_14_+0*q1_13_+1*q1_12_,
q2_27_ + 0*q1_14_+0*q1_13_+0*q1_12_+1*q1_11_,
s1_15_ + r_15_,
s1_14_ + r_14_,
s1_13_ + r_13_,
s1_12_ + r_12_,
s1_11_ + r_11_,
s1_10_ + r_10_,
s1_9_ + r_9_,
s1_8_ + r_8_,
s1_7_ + r_7_,
s1_6_ + r_6_,
s1_5_ + r_5_,
s1_4_ + r_4_,
T1_84_ + 0*q1_11_+1*q1_10_,
T1_82_ + 0*q1_11_+0*q1_10_+1*q1_9_,
T1_80_ + 1*q1_8_,
T1_79_ + 0*q1_11_+0*q1_10_+0*q1_9_,
T1_77_ + 0*q1_8_+1*q1_7_,
T1_76_ + 0*q1_11_+0*q1_10_+0*q1_9_,
T1_74_ + 0*q1_8_+0*q1_7_+1*q1_6_,
T1_73_ + 0*q1_11_+0*q1_10_+0*q1_9_,
T1_71_ + 1*q1_5_,
T1_70_ + 0*q1_8_+0*q1_7_+0*q1_6_,
T1_69_ + 0*q1_11_+0*q1_10_+0*q1_9_,
T1_67_ + 0*q1_5_+1*q1_4_,
T1_66_ + 0*q1_8_+0*q1_7_+0*q1_6_,
T1_65_ + 0*q1_11_+0*q1_10_+0*q1_9_,
T1_63_ + 0*q1_5_+0*q1_4_+1*q1_3_,
T1_62_ + 0*q1_8_+0*q1_7_+0*q1_6_,
T1_61_ + 1*q1_11_+0*q1_10_+0*q1_9_,
T1_59_ + 1*q1_2_,
T1_58_ + 0*q1_5_+0*q1_4_+0*q1_3_,
T1_57_ + 0*q1_8_+0*q1_7_+0*q1_6_,
T1_56_ + 0*q1_11_+1*q1_10_+0*q1_9_,
T1_54_ + 0*q1_2_+1*q1_1_,
T1_53_ + 0*q1_5_+0*q1_4_+0*q1_3_,
T1_52_ + 0*q1_8_+0*q1_7_+0*q1_6_,
T1_51_ + 0*q1_11_+0*q1_10_+1*q1_9_,
T1_49_ + 0*q1_2_+0*q1_1_+1*q1_0_,
T1_48_ + 0*q1_5_+0*q1_4_+0*q1_3_,
T1_47_ + 1*q1_8_+0*q1_7_+0*q1_6_,
T1_46_ + 1*q1_11_+0*q1_10_+0*q1_9_,
T1_44_ + 0*q1_2_+0*q1_1_+0*q1_0_,
T1_43_ + 0*q1_5_+0*q1_4_+0*q1_3_,
T1_42_ + 0*q1_8_+1*q1_7_+0*q1_6_,
T1_41_ + 0*q1_11_+1*q1_10_+0*q1_9_,
T1_39_ + 0*q1_2_+0*q1_1_+0*q1_0_,
T1_38_ + 0*q1_5_+0*q1_4_+0*q1_3_,
T1_37_ + 0*q1_8_+0*q1_7_+1*q1_6_,
T1_36_ + 1*q1_11_+0*q1_10_+1*q1_9_,
T1_34_ + 0*q1_1_+0*q1_0_,
T1_33_ + 0*q1_4_+0*q1_3_+0*q1_2_,
T1_32_ + 0*q1_7_+0*q1_6_+1*q1_5_,
T1_31_ + 1*q1_10_+0*q1_9_+1*q1_8_,
T1_29_ + 0*q1_0_,
T1_28_ + 0*q1_3_+0*q1_2_+0*q1_1_,
T1_27_ + 0*q1_6_+0*q1_5_+1*q1_4_,
T1_26_ + 1*q1_9_+0*q1_8_+1*q1_7_,
T1_25_ + 1*q1_12_+1*q1_11_+1*q1_10_,
T1_24_ + 0*q1_2_+0*q1_1_+0*q1_0_,
T1_23_ + 0*q1_5_+0*q1_4_+1*q1_3_,
T1_22_ + 1*q1_8_+0*q1_7_+1*q1_6_,
T1_21_ + 1*q1_11_+1*q1_10_+1*q1_9_,
T1_20_ + 0*q1_1_+0*q1_0_,
T1_19_ + 0*q1_4_+0*q1_3_+1*q1_2_,
T1_18_ + 1*q1_7_+0*q1_6_+1*q1_5_,
T1_17_ + 1*q1_10_+1*q1_9_+1*q1_8_,
T1_16_ + 0*q1_0_,
T1_15_ + 0*q1_3_+0*q1_2_+1*q1_1_,
T1_14_ + 1*q1_6_+0*q1_5_+1*q1_4_,
T1_13_ + 1*q1_9_+1*q1_8_+1*q1_7_,
T1_12_ + 0*q1_2_+0*q1_1_+1*q1_0_,
T1_11_ + 1*q1_5_+0*q1_4_+1*q1_3_,
T1_10_ + 1*q1_8_+1*q1_7_+1*q1_6_,
T1_9_ + 0*q1_1_+0*q1_0_,
T1_8_ + 1*q1_4_+0*q1_3_+1*q1_2_,
T1_7_ + 1*q1_7_+1*q1_6_+1*q1_5_,
T1_6_ + 0*q1_0_,
T1_5_ + 1*q1_3_+0*q1_2_+1*q1_1_,
T1_4_ + 1*q1_6_+1*q1_5_+1*q1_4_,
T1_3_ + 1*q1_2_+0*q1_1_+1*q1_0_,
T1_2_ + 1*q1_5_+1*q1_4_+1*q1_3_,
T1_1_ + 1*q1_1_+0*q1_0_,
T1_0_ + 1*q1_4_+1*q1_3_+1*q1_2_,
q2_3_ + 1*q1_3_+1*q1_2_+1*q1_1_+1*q1_0_,
q2_2_ + 1*q1_2_+1*q1_1_+1*q1_0_,
q2_1_ + 1*q1_1_+1*q1_0_,
q2_0_ + 1*q1_0_,
q3_14_ + q2_30_,
q3_13_ + q2_29_,
q3_12_ + q2_28_,
q3_11_ + q2_27_,
T2_83_ + 0*q3_14_+0*q3_13_+0*q3_12_,
T2_81_ + 0*q3_14_+0*q3_13_+0*q3_12_,
T2_78_ + 0*q3_14_+0*q3_13_+0*q3_12_,
T2_75_ + 0*q3_14_+0*q3_13_+0*q3_12_,
T2_72_ + 1*q3_14_+0*q3_13_+0*q3_12_,
T2_68_ + 0*q3_14_+1*q3_13_+0*q3_12_,
T2_64_ + 0*q3_14_+0*q3_13_+1*q3_12_,
T2_60_ + 1*q3_14_+0*q3_13_+0*q3_12_,
T2_55_ + 0*q3_14_+1*q3_13_+0*q3_12_,
T2_50_ + 1*q3_14_+0*q3_13_+1*q3_12_,
T2_45_ + 1*q3_14_+1*q3_13_+0*q3_12_,
T2_40_ + 1*q3_14_+1*q3_13_+1*q3_12_,
T2_35_ + 1*q3_14_+1*q3_13_+1*q3_12_,
T2_30_ + 1*q3_13_+1*q3_12_+1*q3_11_,
q2_26_ + T1_83_*T1_84_, //bug
q2_25_ + T1_81_+T1_82_,
q2_24_ + T1_78_+T1_79_+T1_80_,
q2_23_ + T1_75_+T1_76_+T1_77_,
q2_22_ + T1_72_+T1_73_+T1_74_,
q2_21_ + T1_68_+T1_69_+T1_70_+T1_71_,
q2_20_ + T1_64_+T1_65_+T1_66_+T1_67_,
q2_19_ + T1_60_+T1_61_+T1_62_+T1_63_,
q2_18_ + T1_55_+T1_56_+T1_57_+T1_58_+T1_59_,
q2_17_ + T1_50_+T1_51_+T1_52_+T1_53_+T1_54_,
q2_16_ + T1_45_+T1_46_+T1_47_+T1_48_+T1_49_,
q2_15_ + T1_40_+T1_41_+T1_42_+T1_43_+T1_44_,
q2_14_ + T1_35_+T1_36_+T1_37_+T1_38_+T1_39_,
q2_13_ + T1_30_+T1_31_+T1_32_+T1_33_+T1_34_,
q2_12_ + T1_25_+T1_26_+T1_27_+T1_28_+T1_29_,
q2_11_ + T1_21_+T1_22_+T1_23_+T1_24_,
q2_10_ + T1_17_+T1_18_+T1_19_+T1_20_,
q2_9_ + T1_13_+T1_14_+T1_15_+T1_16_,
q2_8_ + T1_10_+T1_11_+T1_12_,
q2_7_ + T1_7_+T1_8_+T1_9_,
q2_6_ + T1_4_+T1_5_+T1_6_,
q2_5_ + T1_2_+T1_3_,
q2_4_ + T1_0_+T1_1_,
t1_30_ + 1*q3_14_,
t1_29_ + 0*q3_14_+1*q3_13_,
t1_28_ + 0*q3_14_+0*q3_13_+1*q3_12_,
t1_27_ + 0*q3_14_+0*q3_13_+0*q3_12_+1*q3_11_,
q3_10_ + q2_26_,
q3_9_ + q2_25_,
q3_8_ + q2_24_,
q3_7_ + q2_23_,
q3_6_ + q2_22_,
q3_5_ + q2_21_,
q3_4_ + q2_20_,
q3_3_ + q2_19_,
q3_2_ + q2_18_,
q3_1_ + q2_17_,
q3_0_ + q2_16_,
T2_84_ + 0*q3_11_+1*q3_10_,
T2_82_ + 0*q3_11_+0*q3_10_+1*q3_9_,
T2_80_ + 1*q3_8_,
T2_79_ + 0*q3_11_+0*q3_10_+0*q3_9_,
T2_77_ + 0*q3_8_+1*q3_7_,
T2_76_ + 0*q3_11_+0*q3_10_+0*q3_9_,
T2_74_ + 0*q3_8_+0*q3_7_+1*q3_6_,
T2_73_ + 0*q3_11_+0*q3_10_+0*q3_9_,
T2_71_ + 1*q3_5_,
T2_70_ + 0*q3_8_+0*q3_7_+0*q3_6_,
T2_69_ + 0*q3_11_+0*q3_10_+0*q3_9_,
T2_67_ + 0*q3_5_+1*q3_4_,
T2_66_ + 0*q3_8_+0*q3_7_+0*q3_6_,
T2_65_ + 0*q3_11_+0*q3_10_+0*q3_9_,
T2_63_ + 0*q3_5_+0*q3_4_+1*q3_3_,
T2_62_ + 0*q3_8_+0*q3_7_+0*q3_6_,
T2_61_ + 1*q3_11_+0*q3_10_+0*q3_9_,
T2_59_ + 1*q3_2_,
T2_58_ + 0*q3_5_+0*q3_4_+0*q3_3_,
T2_57_ + 0*q3_8_+0*q3_7_+0*q3_6_,
T2_56_ + 0*q3_11_+1*q3_10_+0*q3_9_,
T2_54_ + 0*q3_2_+1*q3_1_,
T2_53_ + 0*q3_5_+0*q3_4_+0*q3_3_,
T2_52_ + 0*q3_8_+0*q3_7_+0*q3_6_,
T2_51_ + 0*q3_11_+0*q3_10_+1*q3_9_,
T2_49_ + 0*q3_2_+0*q3_1_+1*q3_0_,
T2_48_ + 0*q3_5_+0*q3_4_+0*q3_3_,
T2_47_ + 1*q3_8_+0*q3_7_+0*q3_6_,
T2_46_ + 1*q3_11_+0*q3_10_+0*q3_9_,
T2_44_ + 0*q3_2_+0*q3_1_+0*q3_0_,
T2_43_ + 0*q3_5_+0*q3_4_+0*q3_3_,
T2_42_ + 0*q3_8_+1*q3_7_+0*q3_6_,
T2_41_ + 0*q3_11_+1*q3_10_+0*q3_9_,
T2_39_ + 0*q3_2_+0*q3_1_+0*q3_0_,
T2_38_ + 0*q3_5_+0*q3_4_+0*q3_3_,
T2_37_ + 0*q3_8_+0*q3_7_+1*q3_6_,
T2_36_ + 1*q3_11_+0*q3_10_+1*q3_9_,
T2_34_ + 0*q3_1_+0*q3_0_,
T2_33_ + 0*q3_4_+0*q3_3_+0*q3_2_,
T2_32_ + 0*q3_7_+0*q3_6_+1*q3_5_,
T2_31_ + 1*q3_10_+0*q3_9_+1*q3_8_,
T2_29_ + 0*q3_0_,
T2_28_ + 0*q3_3_+0*q3_2_+0*q3_1_,
T2_27_ + 0*q3_6_+0*q3_5_+1*q3_4_,
T2_26_ + 1*q3_9_+0*q3_8_+1*q3_7_,
T2_25_ + 1*q3_12_+1*q3_11_+1*q3_10_,
T2_24_ + 0*q3_2_+0*q3_1_+0*q3_0_,
T2_23_ + 0*q3_5_+0*q3_4_+1*q3_3_,
T2_22_ + 1*q3_8_+0*q3_7_+1*q3_6_,
T2_21_ + 1*q3_11_+1*q3_10_+1*q3_9_,
T2_20_ + 0*q3_1_+0*q3_0_,
T2_19_ + 0*q3_4_+0*q3_3_+1*q3_2_,
T2_18_ + 1*q3_7_+0*q3_6_+1*q3_5_,
T2_17_ + 1*q3_10_+1*q3_9_+1*q3_8_,
T2_16_ + 0*q3_0_,
T2_15_ + 0*q3_3_+0*q3_2_+1*q3_1_,
T2_14_ + 1*q3_6_+0*q3_5_+1*q3_4_,
T2_13_ + 1*q3_9_+1*q3_8_+1*q3_7_,
T2_12_ + 0*q3_2_+0*q3_1_+1*q3_0_,
T2_11_ + 1*q3_5_+0*q3_4_+1*q3_3_,
T2_10_ + 1*q3_8_+1*q3_7_+1*q3_6_,
T2_9_ + 0*q3_1_+0*q3_0_,
T2_8_ + 1*q3_4_+0*q3_3_+1*q3_2_,
T2_7_ + 1*q3_7_+1*q3_6_+1*q3_5_,
T2_6_ + 0*q3_0_,
T2_5_ + 1*q3_3_+0*q3_2_+1*q3_1_,
T2_4_ + 1*q3_6_+1*q3_5_+1*q3_4_,
T2_3_ + 1*q3_2_+0*q3_1_+1*q3_0_,
T2_2_ + 1*q3_5_+1*q3_4_+1*q3_3_,
T2_1_ + 1*q3_1_+0*q3_0_,
T2_0_ + 1*q3_4_+1*q3_3_+1*q3_2_,
t1_3_ + 1*q3_3_+1*q3_2_+1*q3_1_+1*q3_0_,
t1_2_ + 1*q3_2_+1*q3_1_+1*q3_0_,
t1_1_ + 1*q3_1_+1*q3_0_,
t1_0_ + 1*q3_0_,
s2_3_ + t1_3_,
s2_2_ + t1_2_,
s2_1_ + t1_1_,
s2_0_ + t1_0_,
t1_26_ + T2_83_+T2_84_,
t1_25_ + T2_81_+T2_82_,
t1_24_ + T2_78_+T2_79_+T2_80_,
t1_23_ + T2_75_+T2_76_+T2_77_,
t1_22_ + T2_72_+T2_73_+T2_74_,
t1_21_ + T2_68_+T2_69_+T2_70_+T2_71_,
t1_20_ + T2_64_+T2_65_+T2_66_+T2_67_,
t1_19_ + T2_60_+T2_61_+T2_62_+T2_63_,
t1_18_ + T2_55_+T2_56_+T2_57_+T2_58_+T2_59_,
t1_17_ + T2_50_+T2_51_+T2_52_+T2_53_+T2_54_,
t1_16_ + T2_45_+T2_46_+T2_47_+T2_48_+T2_49_,
t1_15_ + T2_40_+T2_41_+T2_42_+T2_43_+T2_44_,
t1_14_ + T2_35_+T2_36_+T2_37_+T2_38_+T2_39_,
t1_13_ + T2_30_+T2_31_+T2_32_+T2_33_+T2_34_,
t1_12_ + T2_25_+T2_26_+T2_27_+T2_28_+T2_29_,
t1_11_ + T2_21_+T2_22_+T2_23_+T2_24_,
t1_10_ + T2_17_+T2_18_+T2_19_+T2_20_,
t1_9_ + T2_13_+T2_14_+T2_15_+T2_16_,
t1_8_ + T2_10_+T2_11_+T2_12_,
t1_7_ + T2_7_+T2_8_+T2_9_,
t1_6_ + T2_4_+T2_5_+T2_6_,
t1_5_ + T2_2_+T2_3_,
t1_4_ + T2_0_+T2_1_,
s2_15_ + t1_15_,
s2_14_ + t1_14_,
s2_13_ + t1_13_,
s2_12_ + t1_12_,
s2_11_ + t1_11_,
s2_10_ + t1_10_,
s2_9_ + t1_9_,
s2_8_ + t1_8_,
s2_7_ + t1_7_,
s2_6_ + t1_6_,
s2_5_ + t1_5_,
s2_4_ + t1_4_,
y_0_ + s1_0_+s2_0_,
y_1_ + s1_1_+s2_1_,
y_2_ + s1_2_+s2_2_,
y_3_ + s1_3_+s2_3_,
y_4_ + s1_4_+s2_4_,
y_5_ + s1_5_+s2_5_,
y_6_ + s1_6_+s2_6_,
y_7_ + s1_7_+s2_7_,
y_8_ + s1_8_+s2_8_,
y_9_ + s1_9_+s2_9_,
y_10_ + s1_10_+s2_10_,
y_11_ + s1_11_+s2_11_,
y_12_ + s1_12_+s2_12_,
y_13_ + s1_13_+s2_13_,
y_14_ + s1_14_+s2_14_,
y_15_ + s1_15_+s2_15_,
A + a_0_*X^0 + a_1_*X^1 + a_2_*X^2 + a_3_*X^3 + a_4_*X^4 + a_5_*X^5 + a_6_*X^6 + a_7_*X^7 + a_8_*X^8 + a_9_*X^9 + a_10_*X^10 + a_11_*X^11 + a_12_*X^12 + a_13_*X^13 + a_14_*X^14 + a_15_*X^15,
B + b_0_*X^0 + b_1_*X^1 + b_2_*X^2 + b_3_*X^3 + b_4_*X^4 + b_5_*X^5 + b_6_*X^6 + b_7_*X^7 + b_8_*X^8 + b_9_*X^9 + b_10_*X^10 + b_11_*X^11 + b_12_*X^12 + b_13_*X^13 + b_14_*X^14 + b_15_*X^15;

ideal J0 =
a_15_^2 - a_15_, 
a_14_^2 - a_14_, 
a_13_^2 - a_13_, 
a_12_^2 - a_12_, 
a_11_^2 - a_11_, 
a_10_^2 - a_10_, 
a_9_^2 - a_9_, 
a_8_^2 - a_8_, 
a_7_^2 - a_7_,
a_6_^2 - a_6_,
a_5_^2 - a_5_,
a_4_^2 - a_4_,
a_3_^2 - a_3_, 
a_2_^2 - a_2_,
a_1_^2 - a_1_,
a_0_^2 - a_0_,
b_15_^2 - b_15_, 
b_14_^2 - b_14_, 
b_13_^2 - b_13_, 
b_12_^2 - b_12_, 
b_11_^2 - b_11_, 
b_10_^2 - b_10_, 
b_9_^2 - b_9_, 
b_8_^2 - b_8_, 
b_7_^2 - b_7_,
b_6_^2 - b_6_,
b_5_^2 - b_5_,
b_4_^2 - b_4_,
b_3_^2 - b_3_, 
b_2_^2 - b_2_,
b_1_^2 - b_1_,
b_0_^2 - b_0_;

poly spec = Y + A*B;

int dps = 16;

//check if the circuit indeed implements specification
poly rema = reduce(spec,J1+J0);
if (rema == 0)
{
	"circuit implements specification, exiting";
	quit;
}
else
{
	//"remainder",rema;
	"circuit doesn't implement specification, attempting rectification";
}
int t1 = rtimer-t0;
"time for verification",t1;

//list coneTips =  remainder_partition(rema,dps);

//list rectCheck = prune_logical_cone(coneTips,J1);
list rectCheck = q2_26_;
int t2 = rtimer-t1;
"time for identifying rectifiable nets",t2;

int rectified = 0;
for(int rect=1; rect<=size(rectCheck);rect++)
{	
	if (rectified == 0)
	{
		//rectifying at location rf
		//poly rf = rectCheck[rect];
		poly rf = q2_26_;
		"checking for rectification at", rf;
		ideal ckt_imp = J1;
		
		int ind_r = get_index(ckt_imp, rf);
		int ind_Z = get_index(ckt_imp, Y);
		
		ideal IL = ckt_imp;
		IL[ind_r] = rf+1;
		ideal IH = ckt_imp;
		IH[ind_r] = rf;
		
		poly rL = reduce(spec,IL+J0);
		poly rH = reduce(spec,IH+J0);
		
		//"rL",rL;
		//"rH",rH;

		ideal rlh = groebner((rL*rH)+J0);
		//"ideal rlh is",rlh;
		int t3 = rtimer-t2;
		"time for rectification check until the correction net",t3;

		if (size(rlh)==size(J0))
		{	
			"Circuit Rectifiable at location",rf;
			int lenI = size(ckt_imp);
			ideal Jf = ckt_imp[1..(ind_r-1)];
			ideal Js = ckt_imp[(ind_r+1)..lenI];
			poly quo;
			poly rem;
			poly prem;
		
			prem = reduce(spec,Jf);
		
			rem, quo = multivariate_burg(prem,lead(rf),J0); 
		
			//"remainder",rem;
			//"quotient",quo;
		
			ideal dec = variables(quo);
			ideal JCp = quo,Js;
			if (size(dec)>=1)
			{
				"quotient is not a constant";
				ideal JG = slimgb(JCp);
				matrix V = lift(JG,rem);
				matrix Vt = transpose(V);
				//Vt;
				matrix U = lift(JCp,JG);
				//U;
				poly sol;
				int i;
				for(i=1;i<=size(JG);i++)
				{
					sol = sol + (Vt[1,i]*U[1,i]);
				}
			}
			else
			{	
				"quotient is a constant";
				if (quo != 1)
				{
					matrix quoi = inverse(quo);
				}
				else
				{
					matrix quoi = 1;
				}
				poly irem   = quoi[1,1]*rem;
				poly sol    = reduce(irem,Js+J0);	
			}
			"solution for P is",sol;
			int t4 = rtimer-t3;
			"time for identifying solution using UC",t4;
			poly correc = rf+sol;
			poly corem = reduce(spec, Jf+Js+correc+J0);
		
			"applying correction to circuit at",rf,"with solution",sol,":remainder after reduction is", corem;
			rectified = 1;
		}
		else
		{
			"Circuit not rectifiable at location",rf;
		}
	}
}
"end of computations",rtimer-t0;quit;